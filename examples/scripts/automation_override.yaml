alias: Automation Override
description: Temporarily disables automation and sets lighting/scenes instead.
fields:
  override_id:
    description: Unique identifier string for override mode.
    example: livingroom
  scenes:
    description: List of Scenes to activate during override. list of strings
    example: scene.livingroom_movie_night, scene.livingroom_backlight_tv
    default: []
  automation_ids:
    description: list of automations to disable.
    example: >-
      automation.livingroom_motion_lighting_on,
      automation.livingroom_motion_lighting_off
    default: []
  lights:
    description: List of lights to enable and their config settings.
    example: |
      - entity_id: light.living_room_main
        brightness: 20
        color_temp: 2700
      - entity_id: light.tv_backlight
        brightness: 60
        rgb_color: [0, 0, 255]
    default: []
  duration:
    description: Time before restoring automations.
    example: "02:00:00"
  boolean_id:
    description: The input_boolean to toggle.
    example: input_boolean.override_livingroom_toggle
sequence:
  - variables:
      is_active: "{{ states[boolean_id].state }}"
      is_overriding: "{{ 1 if is_active == 'off' else 0 }}"
      parsed_scenes: "{{ scenes | default([], true) }}"
      parsed_lights: "{{ lights | default([], true) }}"
  - data:
      override_id: "{{ override_id }}"
      automation_ids: "{{ automation_ids }}"
      scenes: "{{ parsed_scenes }}"
      lights: "{{ parsed_lights }}"
      duration: "{{ duration }}"
      is_overriding: "{{ is_overriding }}"
    action: python_script.smart_light_override
  - data:
      entity_id: "{{ boolean_id }}"
    action: input_boolean.toggle
mode: single